{
	"todo": "hightlight arithmetic in yellow and bitwise in cyan",
	"scopeName": "source.factorio-hdl",
	"patterns": [
		{
			"begin": "#",
			"end": "$",
			"name": "comment.line"
		},
		{
			"match": "if",
			"name": "keyword"
		},
		{
			"begin": "\\[",
			"end": "\\]",
			"patterns": [
				{
					"include": "#io_class"
				},
				{
					"include": "#logical"
				},
				{
					"include": "#ident"
				},
				{
					"include": "#expr"
				},
				{
					"include": "#bracket"
				}
			]
		},
		{
			"begin": "\\b(module)\\s+([A-Za-z_]\\w*)",
			"end": "\\(",
			"captures": {
				"1": {
					"name": "keyword.declaration.function"
				},
				"2": {
					"name": "entity.name.function"
				}
			},
			"patterns": [
				{
					"include": "#param"
				}
			]
		},
		{
			"match": "\\b(net)\\s*\\(\\s*(red|green)\\s*\\)\\s*([A-Za-z_]\\w*)",
			"captures": {
				"1": {
					"name": "keyword.declaration.network"
				},
				"2": {
					"name": "storage.modifier"
				},
				"3": {
					"name": "variable"
				}
			}
		},
		{
			"begin": "\\b([a-zA-Z_]\\w*)(?=\\s*(?:<.*>)?\\s*\\()",
			"end": "\\(",
			"captures": {
				"1": {
					"name": "entity.name.function"
				}
			},
			"patterns": [
				{
					"include": "#expr"
				}
			]
		},
		{
			"match": "<|>|<=|>=|==|!=",
			"name": "keyword.operator.comparison"
		},
		{
			"match": "([a-zA-Z_]\\w*)\\s*:",
			"name": "variable.parameter.function.keyword"
		},
		{
			"begin": "loop",
			"end": "{",
			"name": "keyword.control",
			"patterns": [
				{
					"match": "from|to",
					"name": "keyword.control"
				},
				{
					"include": "#expr"
				}
			]
		},
		{
			"include": "#bracket"
		},
		{
			"include": "#arithmetic_op"
		},
		{
			"match": "<-",
			"name": "keyword.operator.assignment"
		},
		{
			"match": "one|value",
			"name": "constant"
		},
		{
			"include": "#int"
		},
		{
			"include": "#logical"
		},
		{
			"include": "#ident"
		}
	],
	"repository": {
		"expr": {
			"patterns": [
				{
					"include": "#int"
				},
				{
					"include": "#param"
				},
				{
					"include": "#arithmetic_op"
				}
			]
		},
		"bracket": {
			"match": "\\(|\\)|\\[|\\]",
			"name": "keyword.bracket"
		},
		"io_class": {
			"match": "in|out",
			"name": "storage.modifier"
		},
		"logical": {
			"match": "all|each|every",
			"name": "keyword"
		},
		"ident": {
			"match": "[a-zA-Z_]\\w*",
			"name": "variable"
		},
		"param": {
			"match": "[a-zA-Z_]\\w*",
			"name": "entity.name.type"
		},
		"int": {
			"match": "-?[0-9]+|(?:0x[0-9a-fA-F])",
			"name": "constant.numeric.integer.decimal"
		},
		"arithmetic_op": {
			"match": "\\+|-|\\*|/|%|\\*|<<|>>|&|\\||\\^",
			"name": "keyword.operator.arithmetic"
		}
	}
}